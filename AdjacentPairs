////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//题目要求：有n个正整数（这些正整数数值<10000），对于这n个数，统计输出其中的相邻数对（差值为1的数对）
//          的个数，相同数据只被统计一次。
//           例如，如果输入数据为1 3 8 2 5 2，那么输出应该是2，表示其中有两个相邻数对，分别是（1,2），
//         （3,2）。注意（2,1）与（1,2）就属于相同数据，不要重复统计。程序运行时，提示用户输入源数据的
//          个数n，然后由系统随机生成n个数据，并显示这n个源数据，然后输出源数据中包含的相邻数对以及总
//          的个数；接着提示用户可以继续输入数值n，如果用户输入的数值小于或等于0，则程序结束；否则程序
//          继续运行。                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////




#include<cstdlib>
#include<cmath>
#include<iostream>
using namespace std;
#define N 10000

void getdata(int* a, int n);//获取随机数
void showdata(int* a, int n);//显示数组
int getneibour(int* a, int n);//在长度为n的数组中输出相邻数对，并返回相邻数对的个数
int main()
{
	int* a, n, k;
	cout << "请输入数据规模：" << endl;
	cin >> n;
	while (n > 0)
	{
		a = (int*)malloc(n * sizeof(int));
		getdata(a, n);
		cout << "源数据:" << endl;
		showdata(a, n);
		k = getneibour(a, n);
		cout << "一共有" << k << "个相邻数对" << endl;
		free(a);
		cout << "请输入数据规模：" << endl;
		cin >> n;
	}
}

void getdata(int* a, int n)
{
	int i;
	srand(rand());
	for (i = 0; i < n; i++)
		a[i] = rand() % N;//确保随机生成的数据均小于10000
}
void showdata(int* a, int n)
{
	int i, j;
	for (i = 0, j = 0; i < n; i++)
	{
		cout << a[i] << endl;
		j++;
		if (j % 20 == 0)//控制每行只显示20个数据
			cout << endl;
	}
	cout << endl;
}
int getneibour(int* a, int n)
{
	////////////////////////////////完成该函数////////////////////////////////////
	
}
